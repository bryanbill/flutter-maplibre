// Autogenerated from Pigeon (v22.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#ifndef PIGEON_PIGEON_G_H_
#define PIGEON_PIGEON_G_H_

#include <flutter_linux/flutter_linux.h>

G_BEGIN_DECLS

/**
 * MaplibreCode:
 * MAPLIBRE_CODE_ONE:
 * MAPLIBRE_CODE_TWO:
 *
 */
typedef enum {
  MAPLIBRE_CODE_ONE = 0,
  MAPLIBRE_CODE_TWO = 1
} MaplibreCode;

/**
 * MaplibreMessageData:
 *
 */

G_DECLARE_FINAL_TYPE(MaplibreMessageData, maplibre_message_data, MAPLIBRE, MESSAGE_DATA, GObject)

/**
 * maplibre_message_data_new:
 * name: field in this object.
 * description: field in this object.
 * code: field in this object.
 * data: field in this object.
 *
 * Creates a new #MessageData object.
 *
 * Returns: a new #MaplibreMessageData
 */
MaplibreMessageData* maplibre_message_data_new(const gchar* name, const gchar* description, MaplibreCode code, FlValue* data);

/**
 * maplibre_message_data_get_name
 * @object: a #MaplibreMessageData.
 *
 * Gets the value of the name field of @object.
 *
 * Returns: the field value.
 */
const gchar* maplibre_message_data_get_name(MaplibreMessageData* object);

/**
 * maplibre_message_data_get_description
 * @object: a #MaplibreMessageData.
 *
 * Gets the value of the description field of @object.
 *
 * Returns: the field value.
 */
const gchar* maplibre_message_data_get_description(MaplibreMessageData* object);

/**
 * maplibre_message_data_get_code
 * @object: a #MaplibreMessageData.
 *
 * Gets the value of the code field of @object.
 *
 * Returns: the field value.
 */
MaplibreCode maplibre_message_data_get_code(MaplibreMessageData* object);

/**
 * maplibre_message_data_get_data
 * @object: a #MaplibreMessageData.
 *
 * Gets the value of the data field of @object.
 *
 * Returns: the field value.
 */
FlValue* maplibre_message_data_get_data(MaplibreMessageData* object);

G_DECLARE_FINAL_TYPE(MaplibreExampleHostApiResponseHandle, maplibre_example_host_api_response_handle, MAPLIBRE, EXAMPLE_HOST_API_RESPONSE_HANDLE, GObject)

G_DECLARE_FINAL_TYPE(MaplibreExampleHostApiGetHostLanguageResponse, maplibre_example_host_api_get_host_language_response, MAPLIBRE, EXAMPLE_HOST_API_GET_HOST_LANGUAGE_RESPONSE, GObject)

/**
 * maplibre_example_host_api_get_host_language_response_new:
 *
 * Creates a new response to ExampleHostApi.getHostLanguage.
 *
 * Returns: a new #MaplibreExampleHostApiGetHostLanguageResponse
 */
MaplibreExampleHostApiGetHostLanguageResponse* maplibre_example_host_api_get_host_language_response_new(const gchar* return_value);

/**
 * maplibre_example_host_api_get_host_language_response_new_error:
 * @code: error code.
 * @message: error message.
 * @details: (allow-none): error details or %NULL.
 *
 * Creates a new error response to ExampleHostApi.getHostLanguage.
 *
 * Returns: a new #MaplibreExampleHostApiGetHostLanguageResponse
 */
MaplibreExampleHostApiGetHostLanguageResponse* maplibre_example_host_api_get_host_language_response_new_error(const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MaplibreExampleHostApiAddResponse, maplibre_example_host_api_add_response, MAPLIBRE, EXAMPLE_HOST_API_ADD_RESPONSE, GObject)

/**
 * maplibre_example_host_api_add_response_new:
 *
 * Creates a new response to ExampleHostApi.add.
 *
 * Returns: a new #MaplibreExampleHostApiAddResponse
 */
MaplibreExampleHostApiAddResponse* maplibre_example_host_api_add_response_new(int64_t return_value);

/**
 * maplibre_example_host_api_add_response_new_error:
 * @code: error code.
 * @message: error message.
 * @details: (allow-none): error details or %NULL.
 *
 * Creates a new error response to ExampleHostApi.add.
 *
 * Returns: a new #MaplibreExampleHostApiAddResponse
 */
MaplibreExampleHostApiAddResponse* maplibre_example_host_api_add_response_new_error(const gchar* code, const gchar* message, FlValue* details);

/**
 * MaplibreExampleHostApiVTable:
 *
 * Table of functions exposed by ExampleHostApi to be implemented by the API provider.
 */
typedef struct {
  MaplibreExampleHostApiGetHostLanguageResponse* (*get_host_language)(gpointer user_data);
  MaplibreExampleHostApiAddResponse* (*add)(int64_t a, int64_t b, gpointer user_data);
  void (*send_message)(MaplibreMessageData* message, MaplibreExampleHostApiResponseHandle* response_handle, gpointer user_data);
} MaplibreExampleHostApiVTable;

/**
 * maplibre_example_host_api_set_method_handlers:
 *
 * @messenger: an #FlBinaryMessenger.
 * @suffix: (allow-none): a suffix to add to the API or %NULL for none.
 * @vtable: implementations of the methods in this API.
 * @user_data: (closure): user data to pass to the functions in @vtable.
 * @user_data_free_func: (allow-none): a function which gets called to free @user_data, or %NULL.
 *
 * Connects the method handlers in the ExampleHostApi API.
 */
void maplibre_example_host_api_set_method_handlers(FlBinaryMessenger* messenger, const gchar* suffix, const MaplibreExampleHostApiVTable* vtable, gpointer user_data, GDestroyNotify user_data_free_func);

/**
 * maplibre_example_host_api_clear_method_handlers:
 *
 * @messenger: an #FlBinaryMessenger.
 * @suffix: (allow-none): a suffix to add to the API or %NULL for none.
 *
 * Clears the method handlers in the ExampleHostApi API.
 */
void maplibre_example_host_api_clear_method_handlers(FlBinaryMessenger* messenger, const gchar* suffix);

/**
 * maplibre_example_host_api_respond_send_message:
 * @response_handle: a #MaplibreExampleHostApiResponseHandle.
 * @return_value: location to write the value returned by this method.
 *
 * Responds to ExampleHostApi.sendMessage. 
 */
void maplibre_example_host_api_respond_send_message(MaplibreExampleHostApiResponseHandle* response_handle, gboolean return_value);

/**
 * maplibre_example_host_api_respond_error_send_message:
 * @response_handle: a #MaplibreExampleHostApiResponseHandle.
 * @code: error code.
 * @message: error message.
 * @details: (allow-none): error details or %NULL.
 *
 * Responds with an error to ExampleHostApi.sendMessage. 
 */
void maplibre_example_host_api_respond_error_send_message(MaplibreExampleHostApiResponseHandle* response_handle, const gchar* code, const gchar* message, FlValue* details);

G_END_DECLS

#endif  // PIGEON_PIGEON_G_H_
